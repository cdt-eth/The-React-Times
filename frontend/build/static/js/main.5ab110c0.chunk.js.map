{"version":3,"sources":["gopher.jpg","components/Header.js","components/SVG.js","components/Row.js","components/Posts.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","this","props","title","src","logo","alt","href","target","rel","React","Component","SVG","width","height","fill","version","xmlns","id","x1","y1","x2","y2","offset","stop-color","d","repeatCount","attributeName","dur","attributeType","values","Row","key","body","Posts","useState","error","setError","isLoaded","setIsLoaded","posts","setItems","useEffect","fetch","then","res","json","result","message","map","post","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAAe,MAA0B,mC,OCGpBA,E,4JACnB,WACE,OACE,yBAAQC,UAAU,aAAlB,UACE,6BAAKC,KAAKC,MAAMC,QAChB,qBAAKC,IAAKC,EAAMC,IAAI,kBAEpB,oBAAGN,UAAU,SAAb,8BACoB,IAClB,mBAAGO,KAAK,4BAA4BC,OAAO,SAASC,IAAI,aAAxD,gBAEK,IAJP,IAKI,IACF,mBACEF,KAAK,6DACLC,OAAO,SACPC,IAAI,aAHN,4B,GAb0BC,IAAMC,WCD7BC,EAAM,WACjB,OACE,8BACE,sBACEC,MAAM,OACNC,OAAO,QACPC,KAAK,OACLC,QAAQ,MACRC,MAAM,6BALR,UAOE,iCAAgBC,GAAG,QAAQC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OAAOC,GAAG,KAAxD,UACE,sBAAMC,OAAO,OAAOC,aAAW,YAC/B,sBAAMD,OAAO,OAAOC,aAAW,YAC/B,sBAAMD,OAAO,OAAOC,aAAW,eAEjC,sBACET,KAAK,cACLU,EAAE,2DAFJ,SAaE,yBACEC,YAAY,aACZX,KAAK,cACLY,cAAc,IACdC,IAAI,MACJC,cAAc,MACdC,OAAO,kP,OCtBJC,EAZH,SAAC7B,GACX,OACE,gCACE,oBAAIF,UAAU,aAAd,SACGE,EAAMC,OADuBD,EAAM8B,KAGtC,oBAAIhC,UAAU,YAAd,SACGE,EAAM+B,MADsB/B,EAAM8B,SCsC5BE,EA3CD,SAAChC,GAAW,IAAD,EACGiC,mBAAS,MADZ,mBAChBC,EADgB,KACTC,EADS,OAESF,oBAAS,GAFlB,mBAEhBG,EAFgB,KAENC,EAFM,OAGGJ,mBAAS,IAHZ,mBAGhBK,EAHgB,KAGTC,EAHS,KA0BvB,OAlBAC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MACC,SAACG,GACCR,GAAY,GACZE,EAASM,MAKX,SAACX,GACCG,GAAY,GACZF,EAASD,QAGd,IAECA,EACK,0CAAaA,EAAMY,WAChBV,EAIR,8BACE,oBAAItC,UAAU,QAAd,SACGwC,EAAMS,KAAI,SAACC,GACV,OAAO,cAAC,EAAD,CAAmB/C,MAAO+C,EAAK/C,MAAO8B,KAAMiB,EAAKjB,MAAvCiB,EAAKhC,WANvB,8CCbIiC,G,kKAXb,WACE,OACE,sBAAKnD,UAAU,MAAf,UACE,cAAC,EAAD,CAAQG,MAAO,2BACf,cAAC,EAAD,IACA,cAAC,EAAD,W,GANUO,IAAMC,YCKTyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5ab110c0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/gopher.3d30abfb.jpg\";","import React from \"react\";\nimport logo from \"../gopher.jpg\";\n\nexport default class Header extends React.Component {\n  render() {\n    return (\n      <header className=\"App-header\">\n        <h1>{this.props.title}</h1>\n        <img src={logo} alt=\"golang-gopher\" />\n\n        <p className=\"credit\">\n          work in progress:{\" \"}\n          <a href=\"https://twitter.com/imcdt\" target=\"_blank\" rel=\"noreferrer\">\n            me\n          </a>{\" \"}\n          |{\" \"}\n          <a\n            href=\"https://github.com/christiandavidturner/Go-News-Aggregator\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            repo\n          </a>\n        </p>\n      </header>\n    );\n  }\n}\n","import React from \"react\";\n\nexport const SVG = () => {\n  return (\n    <div>\n      <svg\n        width=\"100%\"\n        height=\"200px\"\n        fill=\"none\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <linearGradient id=\"grad1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n          <stop offset=\"100%\" stop-color=\"#6eb6e5\" />\n          <stop offset=\"100%\" stop-color=\"#6eb6e5\" />\n          <stop offset=\"100%\" stop-color=\"#6eb6e5\" />\n        </linearGradient>\n        <path\n          fill=\"url(#grad1)\"\n          d=\"\n          M0 67\n          C 273,183\n            822,-40\n            1920.00,106 \n          \n          V 359 \n          H 0 \n          V 67\n          Z\"\n        >\n          <animate\n            repeatCount=\"indefinite\"\n            fill=\"url(#grad1)\"\n            attributeName=\"d\"\n            dur=\"50s\"\n            attributeType=\"XML\"\n            values=\"\n            M0 77 \n            C 473,283\n              822,-40\n              1920,116 \n            \n            V 359 \n            H 0 \n            V 67 \n            Z; \n\n            M0 77 \n            C 473,-40\n              1222,283\n              1920,136 \n            \n            V 359 \n            H 0 \n            V 67 \n            Z; \n\n            M0 77 \n            C 973,260\n              1722,-53\n              1920,120 \n            \n            V 359 \n            H 0 \n            V 67 \n            Z; \n\n            M0 77 \n            C 473,283\n              822,-40\n              1920,116 \n            \n            V 359 \n            H 0 \n            V 67 \n            Z\n            \"\n          ></animate>\n        </path>\n      </svg>\n    </div>\n  );\n};\n","import React from \"react\";\n\nconst Row = (props) => {\n  return (\n    <div>\n      <li className=\"post-title\" key={props.key}>\n        {props.title}\n      </li>\n      <li className=\"post-body\" key={props.key}>\n        {props.body}\n      </li>\n    </div>\n  );\n};\nexport default Row;\n","import React, { useState, useEffect } from \"react\";\nimport Row from \"./Row\";\n\nconst Posts = (props) => {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [posts, setItems] = useState([]);\n\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setItems(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <div>\n        <ul className=\"posts\">\n          {posts.map((post) => {\n            return <Row key={post.id} title={post.title} body={post.body} />;\n          })}\n        </ul>\n      </div>\n    );\n  }\n};\n\nexport default Posts;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport { SVG } from \"./components/SVG\";\n// import { Table } from \"./components/Table\";\nimport Posts from \"./components/Posts\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header title={\"Golang News Aggregator\"} />\n        <SVG />\n        <Posts />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}